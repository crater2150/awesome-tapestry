#!/bin/zsh

WALLPAPERRC=$(awesome-client <<<'return require("awful").util.getdir("config") .. "/tapestry/wallpaperrc.lua"' | sed -e 's/.*string "\(.*\)"/\1/')

mode="-f"

offset_x=(-x 0)
offset_y=(-y 0)
background=(-b "theme.bg_default")

zparseopts -D -K h=help -help=help c=mode f=mode t=mode m=mode x:=offset_x y:=offset_y s:=screen i=ignore_aspect b:=background U=reload r=reload w=wipe

wall=${1:a}

if [ -n "$help" ] || [ -z "$wall" ]; then
	echo "usage: $0 [opts] file
options:
	-s      screen number
	-c      centered
	-f      fit
	-t      tiled
	-m      maximized
	-x, -y  offset in x and y direction (for -t, -m)
	-i      ignore_aspect (for -m)
	-b      background color (for -c, -f)
	-U, -r  reload from wallpaperrc
	-w      wipe all current wallpaper settings and rewrite wallpaperrc. implies -u
	"
	exit 1
fi

if [[ -n "$reload" ]]; then
	if [[ ! -e $WALLPAPERRC ]]; then
		echo "No wallpaperrc found"
		exit 1
	else
		echo "require(\"tapestry\")()" | awesome-client
		exit 0
	fi
fi

if [[ "${background[2]}" != "theme.bg_default" ]]; then
	background[2]="'${background[2]}'"
fi

case "$mode" in
	-c)
		method=centered
		extra_args=", ${background[2]}"
		;;
	-f)
		method=fit
		extra_args=", ${background[2]}"
		;;
	-t)
		method=tiled
		extra_args=", {x = ${offset_x[2]}, y = ${offset_y[2]}}"
		;;
	-m)
		method=maximized
		if [ -n "${ignore_aspect}" ]; then
			ignore_aspect=true
		else
			ignore_aspect=false
		fi
		extra_args=", ${ignore_aspect}, {x = ${offset_x[2]}, y = ${offset_y[2]}}"
		;;
	*) exit ;;
esac

if [[ -n $screen ]]; then key="[${screen[2]}]"; else key="default"; fi

new_entry="\t$key = {gears.wallpaper.${method}, '$wall'$extra_args},"

if [[ -e $WALLPAPERRC && -z $wipe ]]; then
	current_walls=(${(@f)"$(sed -n -e '/^return/,/^}$/p' $WALLPAPERRC)"})
	current_walls=($current_walls[2,-2])
	for i in {1..$#a}; do 
		if [[ $current_walls[$i] =~ "${key/\[/\\[} =" ]]; then
			unset "current_walls[$i]"
		fi
	done
	current_walls+=$new_entry
	current_walls=($current_walls)
else
	current_walls=("$new_entry")
fi

echo "-- wallpaperrc generated by tapestry
local gears = require(\"gears\")
return {
${(F)current_walls}
}" > $WALLPAPERRC

echo "require(\"tapestry\")()" | awesome-client
